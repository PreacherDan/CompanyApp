@model CompanyApp.ViewModels.DepartmentDetailsViewModel
@{
    ViewData["Title"] = "DepartmentDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>@string.Format("{0} - Department Details", Model.Department.Name)</h1

@* These buttons keep failing to work, each works sometimes! *@
@Html.ActionLink("Edit Details", "EditDepartment", "Employees", null, new { id = Model.Department.ID })
@Html.ActionLink("Edit Details", "EditDepartment", "Employees", new { id = Model.Department.ID }, null)<br />
@Html.ActionLink("Edit Details", "EditDepartment", "Employees", new { id = Model.Department.ID }, new { @class="btn btn=primary"}) <br /> <br />

<br /> <br />
<ul>
    <li>Yearly Budget: @Model.Department.BudgetYearly</li>
    <li>Location: @Model.Department.Location</li>
</ul>
<br />

<h2>Employees from ViewModel</h2>
<br />

<ul>
    @if(Model.Employees.Any())
    {
        @foreach(var emp in Model.Employees)
        {
         <li>
             @Html.ActionLink($"{emp.Name} {emp.Surname}", "Details", "Employees", new { id = emp.ID })
         </li>       
        }
    }
    else
    {
        <h1>No Employees in that department!</h1>
    }
</ul>

@*<h2>TO DO: mployees from Model Relation</h2>*@

@*requires the ViewModel Department.Employees object to be initialized with EmployeeDTO objects (in DepartmentDTO constructor) *@
@*DepartmentDetails controller eager loads the Employees (include), who then need to be passed to the DepartmentDTO as EmployeeDTO objects *@
@*<ul>
    <li>
        @foreach (var emp in Model.Department.Employees)
        {
            @Html.ActionLink($"{emp.Name} {emp.Surname}", "Details", "Employees", new { id = emp.ID })
        }
    </li>
</ul>*@